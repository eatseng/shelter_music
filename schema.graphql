input AddRoomVideoInput {
  videos: [VideoInput!]
  room: RoomInput
}

type AddRoomVideoMutationPayload {
  error: String
  videos: [Video!]
}

input CreateInviteInput {
  invitees: [UserInput!]
  room: RoomInput!
}

type Home implements Node {
  id: ID!
  rooms(after: String, first: Int, before: String, last: Int): RoomConnection
}

type InviteMutationPayload {
  error: String
}

type Mutation {
  addRoomVideo(input: AddRoomVideoInput!): AddRoomVideoMutationPayload
  createInvite(input: CreateInviteInput!): InviteMutationPayload
  upsertRoom(input: UpsertRoomInput!): RoomMutationPayload
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  home: Home
  room(id: String!): Room
  user: User
  users: [User!]
}

type Room {
  creator: User
  id: String
  name: String!
  videos(after: String, first: Int, before: String, last: Int): VideoConnection
}

type RoomConnection {
  edges: [RoomEdge]
  pageInfo: PageInfo
}

type RoomEdge {
  cursor: String!
  node: Room
}

input RoomInput {
  creator: UserInput!
  id: String!
  name: String!
}

type RoomMutationPayload {
  error: String
  room: Room
}

input UpsertRoomInput {
  name: String!
}

type User {
  givenName: String!
  id: String!
  name: String!
  picture: String!
}

input UserInput {
  givenName: String!
  id: String
  name: String
  picture: String!
}

type Video {
  addedBy: User!
  description: String
  id: String!
  publishedAt: String
  thumbnails: VideoThumbnails!
  title: String!
}

type VideoConnection {
  edges: [VideoEdge]
  pageInfo: PageInfo
}

type VideoEdge {
  cursor: String!
  node: Video
}

input VideoInput {
  description: String
  id: String!
  publishedAt: String
  thumbnails: VideoThumbnailsInput!
  title: String!
}

type VideoThumbnail {
  height: Int!
  width: Int!
  url: String!
}

input VideoThumbnailInput {
  height: Int!
  width: Int!
  url: String!
}

type VideoThumbnails {
  default: VideoThumbnail
  medium: VideoThumbnail
  high: VideoThumbnail
}

input VideoThumbnailsInput {
  default: VideoThumbnailInput
  medium: VideoThumbnailInput
  high: VideoThumbnailInput
}

