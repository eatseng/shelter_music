input CreateInviteInput {
  invitees: [UserInput!]
  room: RoomInput!
}

type InviteMutationResponse {
  error: String
}

type Mutation {
  createInvite(input: CreateInviteInput!): InviteMutationResponse
  upsertRoom(input: UpsertRoomInput!): RoomMutationResponse
}

type Query {
  room(id: String!): Room
  rooms: [Room!]
  user: User
  users: [User!]
}

type Room {
  creator: User
  id: String
  name: String!
}

input RoomInput {
  creator: UserInput!
  id: String!
  name: String!
}

type RoomMutationResponse {
  error: String
  room: Room
}

input UpsertRoomInput {
  name: String!
}

type User {
  givenName: String!
  id: String!
  name: String!
  picture: String!
}

input UserInput {
  givenName: String!
  id: String
  name: String
  picture: String!
}

